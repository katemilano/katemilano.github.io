{"ast":null,"code":"import _slicedToArray from\"/Users/thomasmilano/dev/gitlab/unc-ral-fsf-pt-11-2020-u-c/19-react/activities/react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import API from\"../utils/API\";import CardContainer from\"../components/CardContainer\";import Row from\"../components/Row\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Gallery(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),users=_useState4[0],setUsers=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),userIndex=_useState6[0],setUserIndex=_useState6[1];// When the component mounts, a call will be made to get random users.\nuseEffect(function(){loadUsers();},[]);function nextUser(userIndex){// Ensure that the user index stays within our range of users\nif(userIndex>=users.length){userIndex=0;}setUser(users[userIndex]);setUserIndex(userIndex);}function previousUser(userIndex){// Ensure that the user index stays within our range of users\nif(userIndex<0){userIndex=users.length-1;}setUser(users[userIndex]);setUserIndex(userIndex);}function handleBtnClick(event){// Get the title of the clicked button\nvar btnName=event.target.getAttribute(\"data-value\");if(btnName===\"next\"){var newUserIndex=userIndex+1;nextUser(newUserIndex);}else{var _newUserIndex=userIndex-1;previousUser(_newUserIndex);}}function loadUsers(){API.fetchUsers().then(function(users){setUsers(users);setUser(users[0]);}).catch(function(err){return console.log(err);});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center\",children:\"Welcome to LinkedUp\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-center h3\",children:\"Click on the arrows to browse users\"}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(CardContainer,{})})]});}export default Gallery;","map":{"version":3,"sources":["/Users/thomasmilano/dev/gitlab/unc-ral-fsf-pt-11-2020-u-c/19-react/activities/react-app/src/pages/Gallery.js"],"names":["React","useEffect","useState","API","CardContainer","Row","Gallery","user","setUser","users","setUsers","userIndex","setUserIndex","loadUsers","nextUser","length","previousUser","handleBtnClick","event","btnName","target","getAttribute","newUserIndex","fetchUsers","then","catch","err","console","log"],"mappings":"8MAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,C,wFAEA,QAASC,CAAAA,OAAT,EAAmB,eACOJ,QAAQ,CAAC,EAAD,CADf,wCACVK,IADU,eACJC,OADI,8BAESN,QAAQ,CAAC,EAAD,CAFjB,yCAEVO,KAFU,eAEHC,QAFG,8BAGiBR,QAAQ,CAAC,CAAD,CAHzB,yCAGVS,SAHU,eAGCC,YAHD,eAKjB;AACAX,SAAS,CAAC,UAAM,CACdY,SAAS,GACV,CAFQ,CAEN,EAFM,CAAT,CAIA,QAASC,CAAAA,QAAT,CAAkBH,SAAlB,CAA6B,CAC3B;AACA,GAAIA,SAAS,EAAIF,KAAK,CAACM,MAAvB,CAA+B,CAC7BJ,SAAS,CAAG,CAAZ,CACD,CACDH,OAAO,CAACC,KAAK,CAACE,SAAD,CAAN,CAAP,CACAC,YAAY,CAACD,SAAD,CAAZ,CACD,CAED,QAASK,CAAAA,YAAT,CAAsBL,SAAtB,CAAiC,CAC/B;AACA,GAAIA,SAAS,CAAG,CAAhB,CAAmB,CACjBA,SAAS,CAAGF,KAAK,CAACM,MAAN,CAAe,CAA3B,CACD,CACDP,OAAO,CAACC,KAAK,CAACE,SAAD,CAAN,CAAP,CACAC,YAAY,CAACD,SAAD,CAAZ,CACD,CAED,QAASM,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,CAC7B;AACA,GAAMC,CAAAA,OAAO,CAAGD,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,YAA1B,CAAhB,CACA,GAAIF,OAAO,GAAK,MAAhB,CAAwB,CACtB,GAAMG,CAAAA,YAAY,CAAGX,SAAS,CAAG,CAAjC,CACAG,QAAQ,CAACQ,YAAD,CAAR,CACD,CAHD,IAGO,CACL,GAAMA,CAAAA,aAAY,CAAGX,SAAS,CAAG,CAAjC,CACAK,YAAY,CAACM,aAAD,CAAZ,CACD,CACF,CAED,QAAST,CAAAA,SAAT,EAAqB,CACnBV,GAAG,CAACoB,UAAJ,GACGC,IADH,CACQ,SAAAf,KAAK,CAAI,CACbC,QAAQ,CAACD,KAAD,CAAR,CACAD,OAAO,CAACC,KAAK,CAAC,CAAD,CAAN,CAAP,CACD,CAJH,EAMGgB,KANH,CAMS,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EANZ,EAOD,CAED,mBACE,oCACE,WAAI,SAAS,CAAC,aAAd,iCADF,cAEE,UAAG,SAAS,CAAC,gBAAb,iDAFF,cAGE,KAAC,GAAD,wBAEE,KAAC,aAAD,IAFF,EAHF,GADF,CAUD,CAED,cAAepB,CAAAA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport API from \"../utils/API\";\nimport CardContainer from \"../components/CardContainer\";\nimport Row from \"../components/Row\";\n\nfunction Gallery() {\n  const [user, setUser] = useState({});\n  const [users, setUsers] = useState([]);\n  const [userIndex, setUserIndex] = useState(0);\n\n  // When the component mounts, a call will be made to get random users.\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  function nextUser(userIndex) {\n    // Ensure that the user index stays within our range of users\n    if (userIndex >= users.length) {\n      userIndex = 0;\n    }\n    setUser(users[userIndex]);\n    setUserIndex(userIndex);\n  }\n\n  function previousUser(userIndex) {\n    // Ensure that the user index stays within our range of users\n    if (userIndex < 0) {\n      userIndex = users.length - 1;\n    }\n    setUser(users[userIndex]);\n    setUserIndex(userIndex);\n  }\n\n  function handleBtnClick(event) {\n    // Get the title of the clicked button\n    const btnName = event.target.getAttribute(\"data-value\");\n    if (btnName === \"next\") {\n      const newUserIndex = userIndex + 1;\n      nextUser(newUserIndex);\n    } else {\n      const newUserIndex = userIndex - 1;\n      previousUser(newUserIndex);\n    }\n  }\n\n  function loadUsers() {\n    API.fetchUsers()\n      .then(users => {\n        setUsers(users);\n        setUser(users[0]);\n      })\n\n      .catch(err => console.log(err));\n  }\n\n  return (\n    <div>\n      <h1 className=\"text-center\">Welcome to LinkedUp</h1>\n      <p className=\"text-center h3\">Click on the arrows to browse users</p>\n      <Row>\n        {/* Pass props to the card container */}\n        <CardContainer />\n      </Row>\n    </div>\n  );\n}\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}